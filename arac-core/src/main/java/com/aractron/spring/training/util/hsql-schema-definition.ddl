drop table CourseSession_Enrollment IF EXISTS;
drop table CourseSession IF EXISTS;
drop table Student IF EXISTS;
drop table Course IF EXISTS;
drop table Faculty IF EXISTS;


create table Faculty (
	FACULTY_ID bigint GENERATED BY DEFAULT AS IDENTITY, 
	USERNAME varchar(255), 
	PASSWORD varchar(255), 
	FIRSTNAME varchar(255), 
	LASTNAME varchar(255), 
	EMAIL varchar(255), 
	PHONENUMBER varchar(32), 
	DEPARTMENT varchar(255), 
	primary key (FACULTY_ID),
	unique (USERNAME));
	
create table Course (
	COURSE_ID bigint GENERATED BY DEFAULT AS IDENTITY, 
	NAME varchar(255), 
	DESCRIPTION varchar(255), 
	DEPARTMENT varchar(255), 
	CREDITHOURS double,
	LEVEL varchar(32) not null, 
	primary key (COURSE_ID));
	
create table Student (
	STUDENT_ID bigint GENERATED BY DEFAULT AS IDENTITY, 
	USERNAME varchar(255), 
	PASSWORD varchar(255), 
	FIRSTNAME varchar(255),
	LASTNAME varchar(255), 
	EMAIL varchar(255), 
	PHONENUMBER varchar(255), 
	CLASSIFICATION varchar(32) not null, 
	primary key (STUDENT_ID), 
	unique (USERNAME));
	
create table CourseSession (
	COURSE_SESSION_ID bigint GENERATED BY DEFAULT AS IDENTITY, 
	COURSE_ID bigint, 
	FACULTY_ID bigint, 
	TERM varchar(32),
	primary key (COURSE_SESSION_ID), 
	foreign key(COURSE_ID) references COURSE(COURSE_ID), 
	foreign key(FACULTY_ID) references FACULTY(FACULTY_ID)); 
		
create table CourseSession_Enrollment(
        ENROLLMENT_ID bigint GENERATED BY DEFAULT AS IDENTITY,
        COURSE_SESSION_ID bigint, 
        STUDENT_ID bigint,
        primary key (ENROLLMENT_ID),
        foreign key(COURSE_SESSION_ID) references COURSESESSION(COURSE_SESSION_ID), 
        foreign key(STUDENT_ID) references STUDENT(STUDENT_ID));
